
Bison
=====

Bison is an open source project and can be used as a substitute for yacc.

To install it, use

.. code-block::

  sudo apt-get install bison

Although bison replaces ``yacc``, we still need to link to ``yacc``.
It is ``liby.a``, which is in ``/usr/lib/x86_64-linux-gnu``.

``ar xf liby.a`` gives us two files: ``main.o`` and ``yyerror.o``.

``num main.o``::

    0000000000000000 T main
                     U setlocale
                     U yyparse

``objdump -d main.o``::

    main.o:     file format elf64-x86-64

    Disassembly of section .text.startup:

    0000000000000000 <main>:
       0:	48 83 ec 08          	sub    $0x8,%rsp
       4:	be 00 00 00 00       	mov    $0x0,%esi
       9:	bf 06 00 00 00       	mov    $0x6,%edi
       e:	e8 00 00 00 00       	callq  13 <main+0x13>
      13:	48 83 c4 08          	add    $0x8,%rsp
      17:	e9 00 00 00 00       	jmpq   1c <main+0x1c>

``readelf -r main.o``::

    Relocation section '.rela.text.startup' at offset 0x1d8 contains 3 entries:
      Offset          Info           Type           Sym. Value    Sym. Name + Addend
    000000000005  00010000000a R_X86_64_32       0000000000000000 .rodata.str1.1 + 0
    00000000000f  000a00000002 R_X86_64_PC32     0000000000000000 setlocale - 4
    000000000018  000b00000002 R_X86_64_PC32     0000000000000000 yyparse - 4

``nm yyerror.o``::

     0000 T yyerror
          U fputc
          U fputs
          U stderr

``objdump -d yyerror.o``::

    yyerror.o:     file format elf64-x86-64

    Disassembly of section .text:

    0000000000000000 <yyerror>:
       0:	48 83 ec 08          	sub    $0x8,%rsp
       4:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # b <yyerror+0xb>
       b:	e8 00 00 00 00       	callq  10 <yyerror+0x10>
      10:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 17 <yyerror+0x17>
      17:	bf 0a 00 00 00       	mov    $0xa,%edi
      1c:	e8 00 00 00 00       	callq  21 <yyerror+0x21>
      21:	31 c0                	xor    %eax,%eax
      23:	48 83 c4 08          	add    $0x8,%rsp
      27:	c3                   	retq

``readelf -r yyerror.o``::

    Relocation section '.rela.text' at offset 0x1c0 contains 4 entries:
      Offset          Info           Type           Sym. Value    Sym. Name + Addend
    000000000007  000800000002 R_X86_64_PC32     0000000000000000 stderr - 4
    00000000000c  000900000002 R_X86_64_PC32     0000000000000000 fputs - 4
    000000000013  000800000002 R_X86_64_PC32     0000000000000000 stderr - 4
    00000000001d  000a00000002 R_X86_64_PC32     0000000000000000 fputc - 4

We can define ``yyerror`` by manually so that there is no need to link ``liby.a``::

  void yyerror(const char* s) {
    fprintf(stderr, "%s\n", s);
  }

.. code-block::

    %{
    %}

    %start
    %token
    %union
    %type

.. code-block::

  statements: statement {printf("statement");}
    | statement statements {printf("statements\"n);}

  statement:  identifier '+' identifier  {printf("plus\n");}
  statement:  identifier '-' identifier  {printf("minus\n");}

Example Hello
-------------

The minimum bison file is ``hello.y``::

  %token foo
  %%
  hello: foo

``bison -d hello.y`` generates ``hello.tab.h`` and ``hello.tab.c``.

Inside ``hello.tab.h`` there is an ``enum``::

    #ifndef YYTOKENTYPE
    # define YYTOKENTYPE
      enum yytokentype
      {
        foo = 258
      };
    #endif

``hello.tab.c`` will invoke ``yylex()``, which is generated by ``flex``.


``%token foo bar 301 baz`` gives us::

    enum yytokentype
    {
      foo = 303,
      bar = 301,
      baz = 304
    };


.. code-block::

  %token foo
  %token bar

generates

.. code-block::

    enum yytokentype
    {
      foo = 258,
      bar = 259
    };

By default, ``YYSTYPE`` is defined as ``int``::

  typedef int YYSTYPE;
  extern YYSTYPE yylval;

If we have::

    %union{
      int hello,
      double* world
    }

Then ``YYSTYPE`` is defined as::

    union YYSTYPE
    {
      int hello,
      double* world
    };

    typedef union YYSTYPE YYSTYPE;
    extern YYSTYPE yylval;

References
----------

- `<https://www.gnu.org/software/bison/>`_

- `<https://pubs.opengroup.org/onlinepubs/9699919799/utilities/yacc.html#>`_

    The Posix standard for yacc.
