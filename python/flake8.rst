
flake8
======

Installation::

  pip install flake8

The following are from PyTorch `<https://github.com/pytorch/pytorch/wiki/Lint-as-you-type>`_.

.. code-block::

  pip install flake8 flake8-mypy flake8-bugbear flake8-comprehensions \
    flake8-executable flake8-pyi mccabe pycodestyle pyflakes


To view help::

  flake8 --help

Usage::

  flake8 /some/path
  flake8 /path/to/hello.py

To check for specific errors::

  flake8 --select E123,W503 /path/to/code

To ignore specific errors::

  flake8 --ignore E24,W504 /path/to/code

To ignore specific errors of a line::

  example = lambda: 'example'  # noqa: E731


Default configuration files (project & global):

- ``setup.cfg``
- ``tox.ini``
- ``.flake8``

Commandline options has the highest priority.

The global configuration files are saved in ``$HOME/.config/flake8``


.. code-block::

  [flake8]
  ignore = D203
  exclude = .git,__pycache__,docs/source/conf.py,old,build,dist
  max-complexity = 10

is equivalent to::

  flake8 --ignore D203 \
    --exclude .git,__pycache__,docs/source/conf.py,old,build,dist \
    --max-complexity 10

and is equivalent to::

    [flake8]
    ignore = D203
    exclude =
      .git,
      __pycache__,
      docs/source/conf.py,
      old,
      build,
      dist
    max-complexity = 10

and is equivalent to::

    [flake8]
    ignore = D203
    exclude =
      # No need to traverse our git directory
      .git,
      # There's no value in checking cache directories
      __pycache__,
      # The conf file is mostly autogenerated, ignore it
      docs/source/conf.py,
      # The old directory contains Flake8 2.0
      old,
      # This contains our built documentation
      build,
      # This contains builds of flake8 that we don't want to check
      dist
    max-complexity = 10


Example::

    [flake8]
    # it's not a bug that we aren't using all of hacking, ignore:
    # F812: list comprehension redefines ...
    # H101: Use TODO(NAME)
    # H202: assertRaises Exception too broad
    # H233: Python 3.x incompatible use of print operator
    # H301: one import per line
    # H306: imports not in alphabetical order (time, os)
    # H401: docstring should not start with a space
    # H403: multi line docstrings should end on a new line
    # H404: multi line docstring should start without a leading new line
    # H405: multi line docstring summary not separated with an empty line
    # H501: Do not use self.__dict__ for string formatting
    ignore = F812,H101,H202,H233,H301,H306,H401,H403,H404,H405,H501

Another example::

    [flake8]
    # it's not a bug that we aren't using all of hacking
    ignore =
      # F812: list comprehension redefines ...
      F812,
      # H101: Use TODO(NAME)
      H101,
      # H202: assertRaises Exception too broad
      H202,
      # H233: Python 3.x incompatible use of print operator
      H233,
      # H301: one import per line
      H301,
      # H306: imports not in alphabetical order (time, os)
      H306,
      # H401: docstring should not start with a space
      H401,
      # H403: multi line docstrings should end on a new line
      H403,
      # H404: multi line docstring should start without a leading new line
      H404,
      # H405: multi line docstring summary not separated with an empty line
      H405,
      # H501: Do not use self.__dict__ for string formatting
      H501

Error code:

- `<https://flake8.pycqa.org/en/latest/user/error-codes.html>`_
- `<https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes>`_

Open Source
-----------

- PyTorch

    `<https://github.com/pytorch/pytorch/blob/master/.flake8>`_

